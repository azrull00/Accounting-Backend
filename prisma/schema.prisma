// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  name      String
  roleId    Int
  role      Role      @relation(fields: [roleId], references: [id])
  posts     Post[]
  comments  Comment[]
  profile   Profile?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String
  content   String?
  published Boolean   @default(false)
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int
  comments  Comment[]
}

model Comment {
  id       Int    @id @default(autoincrement())
  content  String
  post     Post   @relation(fields: [postId], references: [id])
  postId   Int
  author   User   @relation(fields: [authorId], references: [id])
  authorId Int
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  posts String
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
}

model Transaction {
  id           Int      @id @default(autoincrement())
  date         DateTime @default(now()) 
  description  String
  userId       Int
  accountId    Int
  debitAmount  Decimal  @db.Decimal(15, 2)
  creditAmount Decimal  @db.Decimal(15, 2)
  journalId    Int?
}

model Modul {
  id        Int      @id @default(autoincrement())
  namaModul String
  deskripsi String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
